#BlueJ class context
comment0.target=Students
comment1.params=
comment1.target=Students()
comment1.text=\r\n\ Constructor\ for\ objects\ of\ class\ Students\r\n
comment10.params=
comment10.target=double\ averageBelowAge()
comment10.text=\r\n\ calculates\ the\ age\ of\ below\ average\ students\ in\ the\ ArrayList\r\n\r\n\ @return\ \ \ \ calculated\ average\ age\ of\ below\ average\ students\r\n
comment11.params=
comment11.target=java.lang.String\ toString()
comment2.params=filePath
comment2.target=void\ readFile(java.lang.String)
comment2.text=\r\n\ readFile()\ opens\ the\ students\ file\ and\ creates\ and\ adds\ student\ objects\ to\ the\ students\ ArrayList\r\n\ \r\n\ @param\ takes\ a\ filePath\ as\ a\ string\ and\ if\ the\ string\ doesn't\ work,\ we\ already\ told\ the\ compiler\ through\ FileNotFoundException\r\n
comment3.params=
comment3.target=java.lang.String\ bestGpa()
comment3.text=\r\n\ bestGpa\ sorts\ through\ the\ students\ in\ the\ ArrayList\ to\ find\ the\ highest\ Gpa\ among\ them\r\n
comment4.params=
comment4.target=double\ averageGpa()
comment4.text=\r\n\ traverses\ studnets\ ArrayList\ to\ find\ the\ average\ Gpa\r\n\r\n\ @return\ \ \ \ returns\ average\ Gpa\ of\ all\ the\ students\r\n
comment5.params=
comment5.target=int\ aboveAverage()
comment5.text=\r\n\ sorts\ through\ the\ ArrayList\ to\ find\ the\ amount\ of\ above\ average\ students\r\n\r\n\ @return\ \ \ \ amount\ of\ above\ average\ students\r\n
comment6.params=
comment6.target=int\ belowAverage()
comment6.text=\r\n\ Sorts\ through\ the\ ArrayList\ to\ find\ the\ amount\ of\ students\ that\ are\ below\ the\ average\ Gpa\r\n\r\n\ @return\ \ \ \ amount\ of\ below\ average\ students\r\n
comment7.params=
comment7.target=java.lang.String\ printAboveAverage()
comment7.text=\r\n\ printAboveAverage()\ prints\ all\ above\ average\ students\r\n\ \r\n\ @return\ \ \ a\ formatted\ string\ of\ all\ above\ average\ students\r\n
comment8.params=
comment8.target=java.lang.String\ printBelowAverage()
comment8.text=\r\n\ printBelowAverage()\ prints\ all\ below\ average\ students\r\n\r\n\ @return\ \ \ \ a\ formatted\ string\ of\ all\ below\ average\ students\r\n
comment9.params=
comment9.target=java.lang.String\ youngBelow()
comment9.text=\r\n\ Finds\ the\ youngest\ below\ average\ student\r\n\r\n
numComments=12
